2021-09-09 11:18:15 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2021-09-09 11:18:17 [main] WARN  o.s.c.c.c.ConfigServicePropertySourceLocator - Could not locate PropertySource: None of labels [] found
2021-09-09 11:18:17 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2021-09-09 11:18:17 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b0c2dc93-02b0-39c2-b9ac-0e0823eb9cc9
2021-09-09 11:18:17 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$d9ec5ccd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-09 11:18:18 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/Users/yassire/Documents/workspace/multi-view/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/Users/yassire/Documents/workspace/multi-view/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
2021-09-09 11:18:18 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-09-09 11:18:18 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/Users/yassire/Documents/workspace/multi-view/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/Users/yassire/Documents/workspace/multi-view/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:227)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1203)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:62)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:28)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/Users/yassire/Documents/workspace/multi-view/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/Users/yassire/Documents/workspace/multi-view/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:227)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1203)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/Users/yassire/Documents/workspace/multi-view/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:227)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1203)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 34 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 48 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:650)
	... 62 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.base/java.util.Objects.requireNonNull(Objects.java:221)
	at java.base/java.util.ImmutableCollections$Map1.<init>(ImmutableCollections.java:732)
	at java.base/java.util.Map.of(Map.java:1307)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig.adminClient(KafkaAdminConfig.java:23)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$e2aa6eeb.CGLIB$adminClient$0(<generated>)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$e2aa6eeb$$FastClassBySpringCGLIB$$dbfaa574.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$e2aa6eeb.adminClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 63 common frames omitted
2021-09-09 11:25:09 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2021-09-09 11:25:10 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=twitter-to-kafka-service,config-client, profiles=[twitter_to_kafka], label=null, version=9c0603eefc71428510c001fe771ac876c2ee85f8, state=null
2021-09-09 11:25:10 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/yassire/spring-cloud-config-server-repository/config-client-twitter_to_kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/yassire/spring-cloud-config-server-repository/config-client.yml'}]
2021-09-09 11:25:10 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - The following profiles are active: twitter_to_kafka
2021-09-09 11:25:11 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b0c2dc93-02b0-39c2-b9ac-0e0823eb9cc9
2021-09-09 11:25:11 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$d932a230] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-09-09 11:25:11 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-09-09 11:25:11 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2021-09-09 11:25:11 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2021-09-09 11:25:11 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1631183111413
2021-09-09 11:25:12 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2021-09-09 11:25:12 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 3.436 seconds (JVM running for 4.056)
2021-09-09 11:25:12 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Application starts ...
2021-09-09 11:25:12 [main] INFO  c.m.d.k.a.client.KafkaAdminClient - Creating 1 topic(s), attempt 0
2021-09-09 11:25:12 [main] INFO  c.m.d.k.a.client.KafkaAdminClient - Reading kafka topic [twitter-topic], attempt 0
2021-09-09 11:25:12 [main] DEBUG c.m.d.k.a.client.KafkaAdminClient - Topic with name twitter-topic
2021-09-09 11:25:12 [main] DEBUG c.m.d.k.a.client.KafkaAdminClient - Topic with name _schemas
2021-09-09 11:25:12 [main] DEBUG c.m.d.k.a.client.KafkaAdminClient - Topic with name __confluent.support.metrics
2021-09-09 11:25:12 [main] INFO  c.m.d.k.a.client.KafkaAdminClient - Reading kafka topic [twitter-topic], attempt 0
2021-09-09 11:25:12 [main] DEBUG c.m.d.k.a.client.KafkaAdminClient - Topic with name twitter-topic
2021-09-09 11:25:12 [main] DEBUG c.m.d.k.a.client.KafkaAdminClient - Topic with name _schemas
2021-09-09 11:25:12 [main] DEBUG c.m.d.k.a.client.KafkaAdminClient - Topic with name __confluent.support.metrics
2021-09-09 11:25:12 [main] INFO  c.m.d.t.t.k.s.i.i.KafkaStreamInitializer - Topics with name twitter-topic are ready for operations!
2021-09-09 11:25:12 [main] INFO  c.m.d.t.t.k.s.r.i.TwitterKafkaStreamRunner - Started filtering twitter stream from keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2021-09-09 11:25:12 [Twitter Stream consumer /  [1][initializing]] INFO  twitter4j.TwitterStreamImpl - Establishing connection.
2021-09-09 11:25:14 [Twitter Stream consumer /  [1][Establishing connection]] INFO  twitter4j.TwitterStreamImpl - Connection established.
2021-09-09 11:25:14 [Twitter Stream consumer /  [1][Establishing connection]] INFO  twitter4j.TwitterStreamImpl - Receiving status stream.
2021-09-09 11:25:14 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text RT @LiteraturayMas_: "Prefiero la calma de la soledad que la decepción de una mala compañía".

Franz Kafka https://t.co/wWZ7iFZaWF to kafka topic twitter-topic
2021-09-09 11:25:14 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4191121403, "id": 1435912150728560642, "text": "RT @LiteraturayMas_: \"Prefiero la calma de la soledad que la decepción de una mala compañía\".\n\nFranz Kafka https://t.co/wWZ7iFZaWF", "createdAt": 1631183109000}' to topic='twitter-topic'
2021-09-09 11:25:14 [Twitter4J Async Dispatcher[0]] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1683400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 6000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2021-09-09 11:25:14 [Twitter4J Async Dispatcher[0]] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2021-09-09 11:25:14 [Twitter4J Async Dispatcher[0]] WARN  o.a.k.c.producer.ProducerConfig - The configuration 'internal.auto.downgrade.txn.commit' was supplied but isn't a known config.
2021-09-09 11:25:14 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2021-09-09 11:25:14 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2021-09-09 11:25:14 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1631183114770
2021-09-09 11:25:14 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: H_WxUkKsRWaCsQhDZp2j_A
2021-09-09 11:25:15 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text RT @IndiaHistorypic: Lord Ganesha Seated on Throne of Human Skulls , 13th Century A.D  , Singosari ,East Java , Indonesia https://t.co/Yie7… to kafka topic twitter-topic
2021-09-09 11:25:15 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 170369984, "id": 1435912153471467524, "text": "RT @IndiaHistorypic: Lord Ganesha Seated on Throne of Human Skulls , 13th Century A.D  , Singosari ,East Java , Indonesia https://t.co/Yie7\u2026", "createdAt": 1631183110000}' to topic='twitter-topic'
2021-09-09 11:25:15 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 2; Offset 0; Timestamp 1631183115371, at time 1883919668282
2021-09-09 11:25:15 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 0; Offset 0; Timestamp 1631183114786, at time 1883922910598
2021-09-09 11:25:15 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text RT @goodmuzicinc: S O U N D S  O F  S P R I N G 🎶 

Afternoon folks. To welcome spring, we have none other than @SirLSG_SA alongside @DjSta… to kafka topic twitter-topic
2021-09-09 11:25:15 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1113813021887954944, "id": 1435912155468009475, "text": "RT @goodmuzicinc: S O U N D S  O F  S P R I N G 🎶 \n\nAfternoon folks. To welcome spring, we have none other than @SirLSG_SA alongside @DjSta\u2026", "createdAt": 1631183110000}' to topic='twitter-topic'
2021-09-09 11:25:15 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 2; Offset 1; Timestamp 1631183115706, at time 1884197226969
2021-09-09 11:25:17 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text RT @Khithitofficial: မန္တလေးတွင် ယနေ့ စက်တင်ဘာလ ၈ရကနေ့က အကြမ်းဖက် စစ်ကောင်စီ တော်လှန်ရေး မန္တလေး လူငယ်များ သပိတ်စစ်ကြောင်း ဦးဆောင်ကာ ချီတက်… to kafka topic twitter-topic
2021-09-09 11:25:17 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1357210191431933953, "id": 1435912161147047939, "text": "RT @Khithitofficial: မန္တလေးတွင် ယနေ့ စက်တင်ဘာလ ၈ရကနေ့က အကြမ်းဖက် စစ်ကောင်စီ တော်လှန်ရေး မန္တလေး လူငယ်များ သပိတ်စစ်ကြောင်း ဦးဆောင်ကာ ချီတက်\u2026", "createdAt": 1631183111000}' to topic='twitter-topic'
2021-09-09 11:25:17 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 0; Offset 1; Timestamp 1631183117073, at time 1885567582484
2021-09-09 11:25:18 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text Spring INitializer: app web o integrada en STS que crea la base/estructura de una app Spring Boot to kafka topic twitter-topic
2021-09-09 11:25:18 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 711969129826275328, "id": 1435912166570344450, "text": "Spring INitializer: app web o integrada en STS que crea la base/estructura de una app Spring Boot", "createdAt": 1631183113000}' to topic='twitter-topic'
2021-09-09 11:25:18 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 1; Offset 0; Timestamp 1631183118273, at time 1886800145250
2021-09-09 11:25:19 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text RT @btschartdata: 🇰🇷 Gaon Digital Chart

#9. Permission To Dance (-1)
#12. Butter (=)
#20. Dynamite (=)
#42. Savage Love Remix (+1)
#52. Bo… to kafka topic twitter-topic
2021-09-09 11:25:19 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1404028612752285698, "id": 1435912171867701248, "text": "RT @btschartdata: 🇰🇷 Gaon Digital Chart\n\n#9. Permission To Dance (-1)\n#12. Butter (=)\n#20. Dynamite (=)\n#42. Savage Love Remix (+1)\n#52. Bo\u2026", "createdAt": 1631183114000}' to topic='twitter-topic'
2021-09-09 11:25:19 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 1; Offset 1; Timestamp 1631183119574, at time 1888065426310
2021-09-09 11:25:20 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text IRISH SPRING GREEN GREEN GREEN NIGGAUHHH to kafka topic twitter-topic
2021-09-09 11:25:20 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1410131207115976713, "id": 1435912174476664835, "text": "IRISH SPRING GREEN GREEN GREEN NIGGAUHHH", "createdAt": 1631183115000}' to topic='twitter-topic'
2021-09-09 11:25:20 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 0; Offset 2; Timestamp 1631183120220, at time 1888713570405
2021-09-09 11:25:20 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text spring day 
ttu 
wab: eternal to kafka topic twitter-topic
2021-09-09 11:25:20 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1391698323875061764, "id": 1435912177349640194, "text": "spring day \nttu \nwab: eternal", "createdAt": 1631183115000}' to topic='twitter-topic'
2021-09-09 11:25:20 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 1; Offset 2; Timestamp 1631183120968, at time 1889458815609
2021-09-09 11:25:23 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text RT @DaiIySWGames: A new #StarWarsBattlefrontII 501st Clone Jet Trooper Black Series figure has been revealed by Hasbro!

The figure was des… to kafka topic twitter-topic
2021-09-09 11:25:23 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1160303426934378496, "id": 1435912189253144583, "text": "RT @DaiIySWGames: A new #StarWarsBattlefrontII 501st Clone Jet Trooper Black Series figure has been revealed by Hasbro!\n\nThe figure was des\u2026", "createdAt": 1631183118000}' to topic='twitter-topic'
2021-09-09 11:25:23 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 0; Offset 3; Timestamp 1631183123732, at time 1892221218267
2021-09-09 11:25:25 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text @ThisisShantylle omg huhuhu ang spring camp ta to gani na bayaan ta 🥲 to kafka topic twitter-topic
2021-09-09 11:25:25 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 41986526, "id": 1435912196647653378, "text": "@ThisisShantylle omg huhuhu ang spring camp ta to gani na bayaan ta 🥲", "createdAt": 1631183120000}' to topic='twitter-topic'
2021-09-09 11:25:25 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 0; Offset 4; Timestamp 1631183125467, at time 1893959024667
2021-09-09 11:25:26 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text Magic Shop, 00:00, Life Goes On, Moon, Stay, Spring Day, Mikrokosmos, thE ENTIRE MONO MIXTAPE 💜💜💜💜💜💜 to kafka topic twitter-topic
2021-09-09 11:25:26 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1413515125978329090, "id": 1435912200388939777, "text": "Magic Shop, 00:00, Life Goes On, Moon, Stay, Spring Day, Mikrokosmos, thE ENTIRE MONO MIXTAPE 💜💜💜💜💜💜", "createdAt": 1631183121000}' to topic='twitter-topic'
2021-09-09 11:25:26 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 1; Offset 3; Timestamp 1631183126494, at time 1894984387545
2021-09-09 11:25:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text 筑波大，博士後期院生の支援始めたってよ。
https://t.co/qvzFxPHTJK to kafka topic twitter-topic
2021-09-09 11:25:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1418957239222669315, "id": 1435912210908282881, "text": "筑波大，博士後期院生の支援始めたってよ。\nhttps://t.co/qvzFxPHTJK", "createdAt": 1631183123000}' to topic='twitter-topic'
2021-09-09 11:25:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text RT @28sokak: franz kafka yakın arkadaşıyla tatsız bir olay yaşadıktan sonra şu muhteşem cümleyi kuruyor; "beni üzecek gücü sana verdiğim iç… to kafka topic twitter-topic
2021-09-09 11:25:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1329003141690437633, "id": 1435912211231350784, "text": "RT @28sokak: franz kafka yakın arkadaşıyla tatsız bir olay yaşadıktan sonra şu muhteşem cümleyi kuruyor; \"beni üzecek gücü sana verdiğim iç\u2026", "createdAt": 1631183123000}' to topic='twitter-topic'
2021-09-09 11:25:28 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 2; Offset 2; Timestamp 1631183128951, at time 1897441903874
2021-09-09 11:25:28 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 0; Offset 5; Timestamp 1631183128954, at time 1897446866467
2021-09-09 11:25:32 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text RT @tssonal01: @shainya_srj @saurabhraajjain Ya it’s like that song na teri ek jhalak mil jaye toh din ban jaye unhe dekhke toh fall mein b… to kafka topic twitter-topic
2021-09-09 11:25:32 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1322171652835143680, "id": 1435912226028736518, "text": "RT @tssonal01: @shainya_srj @saurabhraajjain Ya it\u2019s like that song na teri ek jhalak mil jaye toh din ban jaye unhe dekhke toh fall mein b\u2026", "createdAt": 1631183127000}' to topic='twitter-topic'
2021-09-09 11:25:32 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 0; Offset 6; Timestamp 1631183132463, at time 1900956429225
2021-09-09 11:25:35 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text New artwork for sale! - "Spring foliage, Saint-Paul-de-Vence, France" - https://t.co/mpicLctMwq @fineartamerica https://t.co/AalV7fnQeX to kafka topic twitter-topic
2021-09-09 11:25:35 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3142775137, "id": 1435912236858581002, "text": "New artwork for sale! - \"Spring foliage, Saint-Paul-de-Vence, France\" - https://t.co/mpicLctMwq @fineartamerica https://t.co/AalV7fnQeX", "createdAt": 1631183129000}' to topic='twitter-topic'
2021-09-09 11:25:35 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 1; Offset 4; Timestamp 1631183135197, at time 1903689765863
2021-09-09 11:25:37 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text RT @bts_bighit: We're all celebrating "Butter (feat. Megan Thee Stallion)" #1 on HOT100 🎉💛
Listen now and let's take over every spring, sum… to kafka topic twitter-topic
2021-09-09 11:25:37 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1411910392780046342, "id": 1435912248418054144, "text": "RT @bts_bighit: We're all celebrating \"Butter (feat. Megan Thee Stallion)\" #1 on HOT100 🎉💛\nListen now and let's take over every spring, sum\u2026", "createdAt": 1631183132000}' to topic='twitter-topic'
2021-09-09 11:25:37 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 0; Offset 7; Timestamp 1631183137862, at time 1906352571020
2021-09-09 11:25:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text I started this sunny spring day at the Beaconvale Vaccination Site. To fully reopen our economy and welcome tourists back, we must ensure that it is safe to do so. The DA is ready to get more done so that every Capetonian who wants one has access to vaccines

#GHLforMayor #VoteDA https://t.co/encftCvEhE to kafka topic twitter-topic
2021-09-09 11:25:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 223780801, "id": 1435912250687098881, "text": "I started this sunny spring day at the Beaconvale Vaccination Site. To fully reopen our economy and welcome tourists back, we must ensure that it is safe to do so. The DA is ready to get more done so that every Capetonian who wants one has access to vaccines\n\n#GHLforMayor #VoteDA https://t.co/encftCvEhE", "createdAt": 1631183133000}' to topic='twitter-topic'
2021-09-09 11:25:38 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 0; Offset 8; Timestamp 1631183138679, at time 1907170996855
2021-09-09 11:25:39 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text RT @FavouredJMK: May each dawn celebrate newness of life for you .@EricaNlewedim, May each day bring forth goodness for u. May your life sp… to kafka topic twitter-topic
2021-09-09 11:25:39 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1194203408741412864, "id": 1435912254403366913, "text": "RT @FavouredJMK: May each dawn celebrate newness of life for you .@EricaNlewedim, May each day bring forth goodness for u. May your life sp\u2026", "createdAt": 1631183134000}' to topic='twitter-topic'
2021-09-09 11:25:39 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 1; Offset 5; Timestamp 1631183139293, at time 1907783596071
2021-09-09 11:25:40 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text RT @Marvel0usJesus: Then your light shall break forth like the morning,
Your healing shall spring forth speedily,
And your righteousness sh… to kafka topic twitter-topic
2021-09-09 11:25:40 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3745569193, "id": 1435912257494454273, "text": "RT @Marvel0usJesus: Then your light shall break forth like the morning,\nYour healing shall spring forth speedily,\nAnd your righteousness sh\u2026", "createdAt": 1631183134000}' to topic='twitter-topic'
2021-09-09 11:25:40 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text RT @bts_bighit: We're all celebrating "Butter (feat. Megan Thee Stallion)" #1 on HOT100 🎉💛
Listen now and let's take over every spring, sum… to kafka topic twitter-topic
2021-09-09 11:25:40 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2184370399, "id": 1435912257578307597, "text": "RT @bts_bighit: We're all celebrating \"Butter (feat. Megan Thee Stallion)\" #1 on HOT100 🎉💛\nListen now and let's take over every spring, sum\u2026", "createdAt": 1631183134000}' to topic='twitter-topic'
2021-09-09 11:25:40 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 0; Offset 9; Timestamp 1631183140009, at time 1908499819473
2021-09-09 11:25:40 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 1; Offset 6; Timestamp 1631183140011, at time 1908500791726
2021-09-09 11:25:40 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text Linen shirts + Spring = winning combo 🌾🌾🌾

Check out our latest blog to read all about it. 👇🏿

https://t.co/JqGup6hW20

#ourmkm #mkmstyle #createthestyle https://t.co/kcns45H7Q0 to kafka topic twitter-topic
2021-09-09 11:25:40 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 576195584, "id": 1435912259814010881, "text": "Linen shirts + Spring = winning combo 🌾🌾🌾\n\nCheck out our latest blog to read all about it. 👇🏿\n\nhttps://t.co/JqGup6hW20\n\n#ourmkm #mkmstyle #createthestyle https://t.co/kcns45H7Q0", "createdAt": 1631183135000}' to topic='twitter-topic'
2021-09-09 11:25:40 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 0; Offset 10; Timestamp 1631183140676, at time 1909168581482
2021-09-09 11:25:41 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text @Deligracy Please, please, PLEASE build a Moroccan Riad spa using Spa Day GP & Courtyard Oasis Kit! 💕💕💕 It could even have a Snowy Escape hot spring as a hammam!! Pls&thanku 🙏 to kafka topic twitter-topic
2021-09-09 11:25:41 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1293871844227977216, "id": 1435912265203650563, "text": "@Deligracy Please, please, PLEASE build a Moroccan Riad spa using Spa Day GP & Courtyard Oasis Kit! 💕💕💕 It could even have a Snowy Escape hot spring as a hammam!! Pls&thanku 🙏", "createdAt": 1631183136000}' to topic='twitter-topic'
2021-09-09 11:25:41 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text RT @bts_bighit: We're all celebrating "Butter (feat. Megan Thee Stallion)" #1 on HOT100 🎉💛
Listen now and let's take over every spring, sum… to kafka topic twitter-topic
2021-09-09 11:25:41 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 761820597118566400, "id": 1435912265379692546, "text": "RT @bts_bighit: We're all celebrating \"Butter (feat. Megan Thee Stallion)\" #1 on HOT100 🎉💛\nListen now and let's take over every spring, sum\u2026", "createdAt": 1631183136000}' to topic='twitter-topic'
2021-09-09 11:25:41 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 0; Offset 11; Timestamp 1631183141853, at time 1910345833374
2021-09-09 11:25:41 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 1; Offset 7; Timestamp 1631183141855, at time 1910350206166
2021-09-09 11:25:42 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text Найти номер первого из двух последовательных элементов в целочисленном массиве... https://t.co/mgROVPvI51 to kafka topic twitter-topic
2021-09-09 11:25:42 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 141727145, "id": 1435912267581861892, "text": "Найти номер первого из двух последовательных элементов в целочисленном массиве... https://t.co/mgROVPvI51", "createdAt": 1631183137000}' to topic='twitter-topic'
2021-09-09 11:25:42 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 0; Offset 12; Timestamp 1631183142467, at time 1910957596981
2021-09-09 11:25:44 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text RT @m_suga2000: SPRING DAY after seeing another song is added to 1B club https://t.co/c81lW0UBAb to kafka topic twitter-topic
2021-09-09 11:25:44 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1356874022596694016, "id": 1435912276393951241, "text": "RT @m_suga2000: SPRING DAY after seeing another song is added to 1B club https://t.co/c81lW0UBAb", "createdAt": 1631183139000}' to topic='twitter-topic'
2021-09-09 11:25:44 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 1; Offset 8; Timestamp 1631183144515, at time 1913005292162
2021-09-09 11:25:46 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Twitter status with text ちなみにkafkaは稼げる技術らしい

本当だろうか？

まぁ、いまは新しいスキルがついて単純に楽しい

https://t.co/hVqwTy0Mxy to kafka topic twitter-topic
2021-09-09 11:25:46 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1129674716204060673, "id": 1435912284690255873, "text": "ちなみにkafkaは稼げる技術らしい\n\n本当だろうか？\n\nまぁ、いまは新しいスキルがついて単純に楽しい\n\nhttps://t.co/hVqwTy0Mxy", "createdAt": 1631183141000}' to topic='twitter-topic'
2021-09-09 11:25:46 [kafka-producer-network-thread | producer-1] DEBUG c.m.d.k.p.c.s.i.TwitterKafkaProducer - Received new metadata. Topic: twitter-topic; Partition 0; Offset 13; Timestamp 1631183146667, at time 1915160959987
2021-09-09 11:26:00 [SpringContextShutdownHook] INFO  c.m.d.t.t.k.s.r.i.TwitterKafkaStreamRunner - twitterStream is not null: shutting down
2021-09-09 11:26:26 [SpringContextShutdownHook] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-09-09 11:26:26 [SpringContextShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
